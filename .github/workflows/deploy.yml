name: Deploy to VPS

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Set up SSH key for VPS access
        env:
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          echo "$VPS_SSH_KEY" > /tmp/vps_ssh_key
          chmod 600 /tmp/vps_ssh_key

      - name: Copy GitHub deploy key to VPS and configure SSH
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_IP: ${{ secrets.VPS_IP }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          ssh -i /tmp/vps_ssh_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_IP << EOF
          
          
            # Configure SSH to use this key for GitHub
          
          
            echo "Testing SSH connection to GitHub..."
            ssh -T git@github.com || echo "SSH connection to GitHub failed"
          EOF

      - name: SSH to VPS and deploy
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_IP: ${{ secrets.VPS_IP }}
        run: |
          ssh -i /tmp/vps_ssh_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_IP << EOF
            echo "Current directory: \$(pwd)"
            ls -la
          
            mkdir -p /root/project/backend
            cd /root/project/backend || { echo "Failed to access /root/project/backend"; exit 1; }
          
            echo "Checking Git status:"
            git status || echo "Git repository not initialized"
          
            if [ ! -d .git ]; then
              echo "Cloning repository..."
              git clone git@github.com:batbooks/backend.git .
              git checkout dev
            else
              echo "Updating repository..."
              git checkout dev
              git fetch origin
              git reset --hard origin/dev
            fi
          
            echo "Git status after update:"
            git status
          
            echo "Running Docker Compose..."
            docker compose down
            docker compose up --build -d --remove-orphans
            docker compose ps
          EOF

      - name: Clean up SSH key
        run: rm -f /tmp/vps_ssh_key
